{"ast":null,"code":"import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScanScreen from \"./screens/ScanScreen\";\nimport ReportScreen from \"./screens/report/ReportScreen\";\nimport CreateUserScreen from \"./screens/CreateUserScreen\";\nimport QRCodeGeneratorScreen from \"./screens/QRCodeGeneratorScreen\";\nimport NotificationScreen from \"./screens/NotificationScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar headerStyle = {\n  backgroundColor: 'orange'\n};\nvar headerTitleStyle = {\n  fontSize: 30,\n  color: 'white'\n};\nvar headerWithBorderRadius = StyleSheet.create({\n  headerStyleWithBorderRadius: {\n    backgroundColor: 'orange',\n    borderBottomRightRadius: 150,\n    height: 100\n  }\n});\nvar getTabOptions = function getTabOptions(route, iconName, label) {\n  return {\n    tabBarIcon: function tabBarIcon(_ref) {\n      var focused = _ref.focused,\n        size = _ref.size,\n        color = _ref.color;\n      return _jsx(Icon, {\n        name: focused ? iconName : `${iconName}-outline`,\n        size: size,\n        color: color\n      });\n    },\n    headerStyle: headerWithBorderRadius.headerStyleWithBorderRadius,\n    headerTitleStyle: headerTitleStyle,\n    title: label\n  };\n};\nvar TabNavigator = function TabNavigator(_ref2) {\n  var _route$params;\n  var route = _ref2.route;\n  var userRole = (_route$params = route.params) == null ? void 0 : _route$params.userRole;\n  StatusBar.setBarStyle('light-content', true);\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarActiveTintColor: 'orange',\n      headerTitleAlign: 'center'\n    },\n    children: [userRole === 'admin' || userRole === 'hr' || userRole === 'staff' ? _jsxs(_Fragment, {\n      children: [_jsx(Tab.Screen, {\n        name: \"Scan\",\n        component: ScanScreen,\n        options: getTabOptions(route, 'ios-barcode', 'Scan')\n      }), userRole === 'admin' && _jsx(Tab.Screen, {\n        name: \"CreateUser\",\n        component: CreateUserScreen,\n        options: getTabOptions(route, 'ios-create', 'Create User')\n      })]\n    }) : null, userRole === 'admin' || userRole === 'hr' ? _jsx(Tab.Screen, {\n      name: \"Report\",\n      component: ReportScreen,\n      options: getTabOptions(route, 'ios-list', 'Report')\n    }) : null, userRole === 'qrGenerate' ? _jsx(Tab.Screen, {\n      name: \"QRGenerator\",\n      component: QRCodeGeneratorScreen,\n      options: getTabOptions(route, 'ios-qr-code', 'QR Generator')\n    }) : null, userRole === 'hr' || userRole === 'staff' ? _jsx(Tab.Screen, {\n      name: \"Notifications\",\n      component: NotificationScreen,\n      options: getTabOptions(route, 'ios-notifications', 'Notifications')\n    }) : null, userRole === 'admin' || userRole === 'hr' || userRole === 'staff' ? _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: getTabOptions(route, 'ios-person', 'Profile')\n    }) : null]\n  });\n};\nexport default TabNavigator;","map":{"version":3,"names":["React","createBottomTabNavigator","Icon","StyleSheet","StatusBar","ScanScreen","ReportScreen","CreateUserScreen","QRCodeGeneratorScreen","NotificationScreen","ProfileScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Tab","headerStyle","backgroundColor","headerTitleStyle","fontSize","color","headerWithBorderRadius","create","headerStyleWithBorderRadius","borderBottomRightRadius","height","getTabOptions","route","iconName","label","tabBarIcon","_ref","focused","size","name","title","TabNavigator","_ref2","_route$params","userRole","params","setBarStyle","Navigator","screenOptions","tabBarActiveTintColor","headerTitleAlign","children","Screen","component","options"],"sources":["C:/Users/Dell/Desktop/ScannerApp/TabNavigator.js"],"sourcesContent":["import React from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport { StyleSheet } from 'react-native'; \r\nimport { StatusBar } from 'react-native';\r\nimport ScanScreen from './screens/ScanScreen';\r\nimport ReportScreen from './screens/report/ReportScreen';\r\nimport CreateUserScreen from './screens/CreateUserScreen';\r\nimport QRCodeGeneratorScreen from './screens/QRCodeGeneratorScreen';\r\nimport NotificationScreen from './screens/NotificationScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst headerStyle = {\r\n  backgroundColor: 'orange',\r\n};\r\n\r\nconst headerTitleStyle = {\r\n  fontSize: 30,\r\n  color: 'white',\r\n  \r\n};\r\n\r\nconst headerWithBorderRadius = StyleSheet.create({\r\n  headerStyleWithBorderRadius: {\r\n    backgroundColor: 'orange',\r\n    // borderBottomLeftRadius: 20, \r\n    borderBottomRightRadius: 150, \r\n    height:100\r\n  },\r\n});\r\n\r\nconst getTabOptions = (route, iconName, label) => ({\r\n  tabBarIcon: ({ focused, size, color }) => (\r\n    <Icon name={focused ? iconName : `${iconName}-outline`} size={size} color={color} />\r\n  ),\r\n  headerStyle: headerWithBorderRadius.headerStyleWithBorderRadius, \r\n  headerTitleStyle,\r\n  title: label,\r\n});\r\n\r\nconst TabNavigator = ({ route }) => {\r\n  const userRole = route.params?.userRole;\r\n\r\n  StatusBar.setBarStyle('light-content', true);\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        tabBarActiveTintColor: 'orange',\r\n        headerTitleAlign: 'center',\r\n      }}\r\n    >\r\n      {userRole === 'admin' || userRole === 'hr' || userRole === 'staff' ? (\r\n        <>\r\n          <Tab.Screen name=\"Scan\" component={ScanScreen} options={getTabOptions(route, 'ios-barcode', 'Scan')} />\r\n          {userRole === 'admin' && (\r\n            <Tab.Screen\r\n              name=\"CreateUser\"\r\n              component={CreateUserScreen}\r\n              options={getTabOptions(route, 'ios-create', 'Create User')}\r\n            />\r\n          )}\r\n        </>\r\n      ) : null}\r\n\r\n      {userRole === 'admin' || userRole === 'hr' ? (\r\n        <Tab.Screen name=\"Report\" component={ReportScreen} options={getTabOptions(route, 'ios-list', 'Report')} />\r\n      ) : null}\r\n\r\n      {userRole === 'qrGenerate' ? (\r\n        <Tab.Screen\r\n          name=\"QRGenerator\"\r\n          component={QRCodeGeneratorScreen}\r\n          options={getTabOptions(route, 'ios-qr-code', 'QR Generator')}\r\n        />\r\n      ) : null}\r\n\r\n      {userRole === 'hr' || userRole === 'staff' ? (\r\n        <Tab.Screen\r\n          name=\"Notifications\"\r\n          component={NotificationScreen}\r\n          options={getTabOptions(route, 'ios-notifications', 'Notifications')}\r\n        />\r\n      ) : null}\r\n\r\n      {userRole === 'admin' || userRole === 'hr' || userRole === 'staff' ? (\r\n        <Tab.Screen\r\n          name=\"Profile\"\r\n          component={ProfileScreen}\r\n          options={getTabOptions(route, 'ios-person', 'Profile')}\r\n        />\r\n      ) : null}\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default TabNavigator;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
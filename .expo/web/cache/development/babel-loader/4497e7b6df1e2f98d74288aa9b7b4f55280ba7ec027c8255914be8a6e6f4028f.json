{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function EnterOTPScreen() {\n  var _useState = useState(['', '', '', '', '', '']),\n    _useState2 = _slicedToArray(_useState, 2),\n    otp = _useState2[0],\n    setOtp = _useState2[1];\n  var inputRefs = [useRef(null), useRef(null), useRef(null), useRef(null), useRef(null), useRef(null)];\n  var navigation = useNavigation();\n  var route = useRoute();\n  var cid = route.params.cid;\n  var handleOTPEnter = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        if (otp.some(function (digit) {\n          return digit === '';\n        })) {\n          Alert.alert('Error', 'Please fill in all the OTP fields.');\n          return;\n        }\n        var enteredOTP = otp.join('');\n        var response = yield fetch(`http://192.168.128.8:8000/enter-otp?cid=${cid}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            otp_code: enteredOTP\n          })\n        });\n        if (response.ok) {\n          navigation.navigate('reset', {\n            cid: cid\n          });\n        } else {\n          Alert.alert('Error', 'Invalid OTP. Please try again.');\n        }\n      } catch (error) {\n        console.error('An error occurred while sending the request:', error);\n        Alert.alert('Error', 'An error occurred. Please try again later.');\n      }\n    });\n    return function handleOTPEnter() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: styles.squareBox\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Email Verification\"\n      }), _jsx(Text, {\n        style: styles.title1,\n        children: \"Enter the 6-digit code sent to you\"\n      }), _jsx(View, {\n        style: styles.otpContainer,\n        children: otp.map(function (digit, index) {\n          return _jsx(TextInput, {\n            ref: inputRefs[index],\n            style: styles.otpInput,\n            maxLength: 1,\n            keyboardType: \"numeric\",\n            value: digit,\n            onChangeText: function onChangeText(text) {\n              var newOtp = _toConsumableArray(otp);\n              newOtp[index] = text;\n              setOtp(newOtp);\n              if (text && index < 5) {\n                inputRefs[index + 1].current.focus();\n              } else if (!text && index > 0) {\n                inputRefs[index - 1].current.focus();\n              }\n            }\n          }, index);\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: handleOTPEnter,\n        children: _jsx(Text, {\n          style: styles.loginButtonText,\n          children: \"Submit OTP\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  squareBox: {\n    width: '100%',\n    height: 100,\n    backgroundColor: 'orange',\n    borderBottomEndRadius: 300,\n    marginBottom: 40\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 40,\n    color: '#f05e16'\n  },\n  title1: {\n    fontSize: 14,\n    color: 'grey',\n    marginBottom: 20\n  },\n  otpContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  otpInput: {\n    borderWidth: 1,\n    borderColor: 'orange',\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    textAlign: 'center',\n    margin: 5\n  },\n  loginButton: {\n    backgroundColor: 'orange',\n    padding: 10,\n    alignItems: 'center',\n    borderRadius: 100,\n    marginTop: 40,\n    width: '80%'\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","useRef","View","Text","Alert","StyleSheet","TouchableOpacity","TextInput","useNavigation","useRoute","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EnterOTPScreen","_useState","_useState2","_slicedToArray","otp","setOtp","inputRefs","navigation","route","cid","params","handleOTPEnter","_ref","_asyncToGenerator","some","digit","alert","enteredOTP","join","response","fetch","method","headers","body","JSON","stringify","otp_code","ok","navigate","error","console","apply","arguments","children","style","styles","squareBox","container","title","title1","otpContainer","map","index","ref","otpInput","maxLength","keyboardType","value","onChangeText","text","newOtp","_toConsumableArray","current","focus","loginButton","onPress","loginButtonText","create","width","height","backgroundColor","borderBottomEndRadius","marginBottom","flex","justifyContent","alignItems","fontSize","fontWeight","color","flexDirection","borderWidth","borderColor","borderRadius","textAlign","margin","padding","marginTop"],"sources":["C:/Users/Dell/Desktop/ScannerApp/screens/EnterOtp.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { View, Text, Alert, StyleSheet, TouchableOpacity, TextInput } from 'react-native';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\n\r\nexport default function EnterOTPScreen() {\r\n  const [otp, setOtp] = useState(['', '', '', '', '', '']);\r\n  const inputRefs = [\r\n    useRef(null),\r\n    useRef(null),\r\n    useRef(null),\r\n    useRef(null),\r\n    useRef(null),\r\n    useRef(null),\r\n  ];\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n  const cid = route.params.cid;\r\n\r\n  const handleOTPEnter = async () => {\r\n    try {\r\n      if (otp.some(digit => digit === '')) {\r\n        // Ensure that all OTP fields are filled\r\n        Alert.alert('Error', 'Please fill in all the OTP fields.');\r\n        return;\r\n      }\r\n\r\n      const enteredOTP = otp.join('');\r\n\r\n      const response = await fetch(`http://192.168.128.8:8000/enter-otp?cid=${cid}`,\r\n\r\n      // const response = await fetch(`http://202.144.153.106:8000/enter-otp?cid=${cid}`,\r\n      \r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ otp_code: enteredOTP }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        navigation.navigate('reset', { cid: cid });\r\n      } else {\r\n        Alert.alert('Error', 'Invalid OTP. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while sending the request:', error);\r\n      Alert.alert('Error', 'An error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.squareBox} />\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Email Verification</Text>\r\n        <Text style={styles.title1}>Enter the 6-digit code sent to you</Text>\r\n        <View style={styles.otpContainer}>\r\n          {otp.map((digit, index) => (\r\n            <TextInput\r\n              key={index}\r\n              ref={inputRefs[index]}\r\n              style={styles.otpInput}\r\n              maxLength={1}\r\n              keyboardType=\"numeric\"\r\n              value={digit}\r\n              onChangeText={(text) => {\r\n                const newOtp = [...otp];\r\n                newOtp[index] = text;\r\n                setOtp(newOtp);\r\n\r\n                if (text && index < 5) {\r\n                  inputRefs[index + 1].current.focus();\r\n                } else if (!text && index > 0) {\r\n                  inputRefs[index - 1].current.focus();\r\n                }\r\n              }}\r\n            />\r\n          ))}\r\n        </View>\r\n        <TouchableOpacity style={styles.loginButton} onPress={handleOTPEnter}>\r\n          <Text style={styles.loginButtonText}>Submit OTP</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  squareBox: {\r\n    width: '100%',\r\n    height: 100,\r\n    backgroundColor: 'orange',\r\n    borderBottomEndRadius: 300,\r\n    marginBottom: 40,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 40,\r\n    color:'#f05e16'\r\n  },\r\n  title1: {\r\n    fontSize: 14,\r\n    color: 'grey',\r\n    marginBottom: 20,\r\n  },\r\n  otpContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  otpInput: {\r\n    borderWidth: 1,\r\n    borderColor: 'orange',\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    textAlign: 'center',\r\n    margin: 5,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: 'orange',\r\n    padding: 10,\r\n    alignItems: 'center',\r\n    borderRadius: 100,\r\n    marginTop: 40,\r\n    width: '80%',\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
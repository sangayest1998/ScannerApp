{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ScanScreen = function ScanScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanned = _useState4[0],\n    setScanned = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    userId = _useState8[0],\n    setUserId = _useState8[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$BarCodeScanner = yield BarCodeScanner.requestPermissionsAsync(),\n        status = _yield$BarCodeScanner.status;\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n  useEffect(function () {\n    AsyncStorage.getItem('userId').then(function (value) {\n      if (value) {\n        setUserId(value);\n      }\n    }).catch(function (error) {\n      console.error('Error retrieving userId:', error);\n    });\n  }, []);\n  var handleBarCodeScanned = function () {\n    var _ref3 = _asyncToGenerator(function* (_ref2) {\n      var type = _ref2.type,\n        data = _ref2.data;\n      if (isLoading) return;\n      setIsLoading(true);\n      setScanned(true);\n      try {\n        var response = yield axios.post('http://192.168.128.8:8000/api/qr-scan', {\n          cid: userId,\n          token: data\n        });\n        console.log(response.data);\n        if (response.data.message) {\n          Alert.alert('Success', response.data.message, [{\n            text: 'OK',\n            onPress: resetScanner\n          }]);\n        } else {\n          Alert.alert('Unknown Status', 'An unknown status was returned from the server.', [{\n            text: 'OK',\n            onPress: resetScanner\n          }]);\n        }\n      } catch (error) {\n        console.error(error);\n        if (error.response && error.response.data && error.response.data.detail) {\n          Alert.alert('Error', error.response.data.detail, [{\n            text: 'OK',\n            onPress: resetScanner\n          }]);\n        } else {\n          Alert.alert('Error', 'An error occurred while processing your request.', [{\n            text: 'OK',\n            onPress: resetScanner\n          }]);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function handleBarCodeScanned(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var resetScanner = function resetScanner() {\n    setScanned(false);\n  };\n  if (hasPermission === null) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"blue\"\n      }), _jsx(Text, {\n        children: \"Requesting camera permission...\"\n      })]\n    });\n  }\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      style: styles.errorText,\n      children: \"No access to camera.\"\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.txt,\n      children: \"Place the QR code inside the frame\"\n    }), _jsxs(View, {\n      style: styles.cameraContainer,\n      children: [_jsx(BarCodeScanner, {\n        onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n        style: styles.scanner\n      }), isLoading && _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"blue\",\n        style: styles.loadingIndicator\n      })]\n    }), _jsxs(View, {\n      style: styles.cornersContainer,\n      children: [_jsx(View, {\n        style: styles.topLeftCorner\n      }), _jsx(View, {\n        style: styles.topRightCorner\n      }), _jsx(View, {\n        style: styles.bottomLeftCorner\n      }), _jsx(View, {\n        style: styles.bottomRightCorner\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'grey'\n  },\n  errorText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'red'\n  },\n  loadingIndicator: {\n    position: 'absolute',\n    top: '50%',\n    left: 0,\n    right: 0\n  },\n  cameraContainer: {\n    position: 'relative',\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n    aspectRatio: 1,\n    overflow: 'hidden'\n  },\n  cornersContainer: {\n    position: 'absolute',\n    top: '25%',\n    left: '15%',\n    width: '70%',\n    aspectRatio: 1,\n    zIndex: 1\n  },\n  scanner: {\n    flex: 1\n  },\n  topLeftCorner: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '15%',\n    height: '15%',\n    borderTopWidth: 8,\n    borderLeftWidth: 8,\n    borderColor: 'orange'\n  },\n  topRightCorner: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    width: '15%',\n    height: '15%',\n    borderTopWidth: 8,\n    borderRightWidth: 8,\n    borderColor: 'orange'\n  },\n  bottomLeftCorner: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '15%',\n    height: '15%',\n    borderBottomWidth: 8,\n    borderLeftWidth: 8,\n    borderColor: 'orange'\n  },\n  bottomRightCorner: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    width: '15%',\n    height: '15%',\n    borderBottomWidth: 8,\n    borderRightWidth: 8,\n    borderColor: 'orange'\n  },\n  loadingIndicator: {\n    position: 'absolute',\n    top: '50%',\n    left: 0,\n    right: 0\n  },\n  txt: {\n    color: 'white',\n    fontSize: 17,\n    marginBottom: 30\n  }\n});\nexport default ScanScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ActivityIndicator","Alert","Dimensions","BarCodeScanner","axios","AsyncStorage","jsx","_jsx","jsxs","_jsxs","ScanScreen","_useState","_useState2","_slicedToArray","hasPermission","setHasPermission","_useState3","_useState4","scanned","setScanned","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","userId","setUserId","_asyncToGenerator","_yield$BarCodeScanner","requestPermissionsAsync","status","getItem","then","value","catch","error","console","handleBarCodeScanned","_ref3","_ref2","type","data","response","post","cid","token","log","message","alert","text","onPress","resetScanner","detail","_x","apply","arguments","style","styles","container","children","size","color","errorText","txt","cameraContainer","onBarCodeScanned","undefined","scanner","loadingIndicator","cornersContainer","topLeftCorner","topRightCorner","bottomLeftCorner","bottomRightCorner","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","position","top","left","right","width","get","height","aspectRatio","overflow","zIndex","borderTopWidth","borderLeftWidth","borderColor","borderRightWidth","bottom","borderBottomWidth","marginBottom"],"sources":["C:/Users/Dell/Desktop/ScannerApp/screens/ScanScreen.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { View, Text, StyleSheet, ActivityIndicator, Alert } from 'react-native';\r\n// import { BarCodeScanner } from 'expo-barcode-scanner';\r\n// import axios from 'axios';\r\n// import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n// const ScanScreen = () => {\r\n//   const [hasPermission, setHasPermission] = useState(null);\r\n//   const [scanned, setScanned] = useState(false);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [userId, setUserId] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     (async () => {\r\n//       const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n//       setHasPermission(status === 'granted');\r\n//     })();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     AsyncStorage.getItem('userId')\r\n//       .then((value) => {\r\n//         if (value) {\r\n//           setUserId(value);\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('Error retrieving userId:', error);\r\n//       });\r\n//   }, []);\r\n\r\n//   const handleBarCodeScanned = async ({ type, data }) => {\r\n//     if (isLoading) return;\r\n\r\n//     setIsLoading(true);\r\n//     setScanned(true);\r\n\r\n//     try {\r\n//       const response = await axios.post('http://192.168.0.119:8000/api/qr-scan', {\r\n//         cid: userId,\r\n//         token: data,\r\n//       });\r\n\r\n//       console.log(response.data);\r\n\r\n//       if (response.data.message) {\r\n//         Alert.alert('Success', response.data.message, [\r\n//           { text: 'OK', onPress: resetScanner },\r\n//         ]);\r\n//       } else {\r\n//         Alert.alert('Unknown Status', 'An unknown status was returned from the server.', [\r\n//           { text: 'OK', onPress: resetScanner },\r\n//         ]);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n\r\n//       if (error.response && error.response.data && error.response.data.detail) {\r\n//         Alert.alert('Error', error.response.data.detail, [\r\n//           { text: 'OK', onPress: resetScanner },\r\n//         ]);\r\n//       } else {\r\n//         Alert.alert('Error', 'An error occurred while processing your request.', [\r\n//           { text: 'OK', onPress: resetScanner },\r\n//         ]);\r\n//       }\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const resetScanner = () => {\r\n//     setScanned(false);\r\n//   };\r\n\r\n//   if (hasPermission === null) {\r\n//     return (\r\n//       <View style={styles.container}>\r\n//         <ActivityIndicator size=\"large\" color=\"blue\" />\r\n//         <Text>Requesting camera permission...</Text>\r\n//       </View>\r\n//     );\r\n//   }\r\n//   if (hasPermission === false) {\r\n//     return <Text style={styles.errorText}>No access to camera.</Text>;\r\n//   }\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.txt}>Place the QR code inside the frame</Text>\r\n//       <View style={styles.cameraWindow}>\r\n//         <BarCodeScanner\r\n//           onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n//           style={styles.scanner} // Use a custom style for the scanner\r\n//         />\r\n//       </View>\r\n//       {isLoading && (\r\n//         <ActivityIndicator size=\"large\" color=\"blue\" style={styles.loadingIndicator} />\r\n//       )}\r\n//     </View>\r\n    \r\n//   );\r\n// };\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     alignItems: 'center',\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     backgroundColor:'grey'\r\n//   },\r\n//   errorText: {\r\n//     fontSize: 18,\r\n//     fontWeight: 'bold',\r\n//     color: 'red',\r\n//   },\r\n//   loadingIndicator: {\r\n//     position: 'absolute',\r\n//     top: '50%',\r\n//     left: 0,\r\n//     right: 0,\r\n//   },\r\n//   cameraWindow: {\r\n//     width: '75%',\r\n//     aspectRatio: 1, // This will make the camera feed fit perfectly into the square\r\n//     borderRadius: 20,\r\n//     overflow: 'hidden',\r\n//     marginBottom: 30,\r\n//     borderWidth: 5,\r\n//     borderColor: 'orange',\r\n//   },\r\n//   scanner: {\r\n//     height: 379,\r\n//   },\r\n//   txt:{\r\n//     color:'white',\r\n//     fontSize:17,\r\n//     marginBottom:30\r\n//   }\r\n// });\r\n\r\n// export default ScanScreen;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ActivityIndicator, Alert ,Dimensions} from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport axios from 'axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst ScanScreen = () => {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [userId, setUserId] = useState('');\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    AsyncStorage.getItem('userId')\r\n      .then((value) => {\r\n        if (value) {\r\n          setUserId(value);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error retrieving userId:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleBarCodeScanned = async ({ type, data }) => {\r\n    if (isLoading) return;\r\n\r\n    setIsLoading(true);\r\n    setScanned(true);\r\n\r\n    try {\r\n      // const response = await axios.post('http://192.168.128.8:8000/api/qr-scan', \r\n\r\n      // const response = await axios.post('http://202.144.153.106:8000/api/qr-scan', \r\n\r\n      const response = await axios.post('http://192.168.128.8:8000/api/qr-scan', \r\n      \r\n      {\r\n        cid: userId,\r\n        token: data,\r\n      });\r\n\r\n      console.log(response.data);\r\n\r\n      if (response.data.message) {\r\n        Alert.alert('Success', response.data.message, [\r\n          { text: 'OK', onPress: resetScanner },\r\n        ]);\r\n      } else {\r\n        Alert.alert('Unknown Status', 'An unknown status was returned from the server.', [\r\n          { text: 'OK', onPress: resetScanner },\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n\r\n      if (error.response && error.response.data && error.response.data.detail) {\r\n        Alert.alert('Error', error.response.data.detail, [\r\n          { text: 'OK', onPress: resetScanner },\r\n        ]);\r\n      } else {\r\n        Alert.alert('Error', 'An error occurred while processing your request.', [\r\n          { text: 'OK', onPress: resetScanner },\r\n        ]);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetScanner = () => {\r\n    setScanned(false);\r\n  };\r\n\r\n  if (hasPermission === null) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ActivityIndicator size=\"large\" color=\"blue\" />\r\n        <Text>Requesting camera permission...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text style={styles.errorText}>No access to camera.</Text>;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.txt}>Place the QR code inside the frame</Text>\r\n      <View style={styles.cameraContainer}>\r\n        <BarCodeScanner\r\n          onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n          style={styles.scanner} // Use a custom style for the scanner\r\n        />\r\n     \r\n      {isLoading && (\r\n        <ActivityIndicator size=\"large\" color=\"blue\" style={styles.loadingIndicator} />\r\n      )}\r\n       </View>\r\n       <View style={styles.cornersContainer}>\r\n        <View style={styles.topLeftCorner} />\r\n        <View style={styles.topRightCorner} />\r\n        <View style={styles.bottomLeftCorner} />\r\n        <View style={styles.bottomRightCorner} />\r\n      </View>\r\n    </View>\r\n    \r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'grey',\r\n  },\r\n  errorText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'red',\r\n  },\r\n  loadingIndicator: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n \r\n  cameraContainer: {\r\n    position: 'relative',\r\n    width: Dimensions.get('window').width,\r\n    height: Dimensions.get('window').height,\r\n    aspectRatio: 1,\r\n    overflow: 'hidden',\r\n  },\r\n  cornersContainer: {\r\n    position: 'absolute',\r\n    top: '25%',\r\n    left: '15%',\r\n    width: '70%',\r\n    aspectRatio: 1,\r\n    zIndex: 1,\r\n  },\r\n  \r\n  scanner: {\r\n    flex: 1,\r\n  },\r\n  topLeftCorner: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    width: '15%',\r\n    height: '15%',\r\n    borderTopWidth: 8,\r\n    borderLeftWidth: 8,\r\n    borderColor: 'orange',\r\n  },\r\n  topRightCorner: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    width: '15%',\r\n    height: '15%',\r\n    borderTopWidth: 8,\r\n    borderRightWidth: 8,\r\n    borderColor: 'orange',\r\n  },\r\n  bottomLeftCorner: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    width: '15%',\r\n    height: '15%',\r\n    borderBottomWidth: 8,\r\n    borderLeftWidth: 8,\r\n    borderColor: 'orange',\r\n  },\r\n  bottomRightCorner: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0,\r\n    width: '15%',\r\n    height: '15%',\r\n    borderBottomWidth: 8,\r\n    borderRightWidth: 8,\r\n    borderColor: 'orange',\r\n  },\r\n  loadingIndicator: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  txt:{\r\n    color:'white',\r\n    fontSize:17,\r\n    marginBottom:30\r\n  }\r\n});\r\n\r\nexport default ScanScreen;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport { Ionicons, MaterialCommunityIcons, Zocial, Entypo, FontAwesome, FontAwesome5, MaterialIcons } from \"@expo/vector-icons\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CreateUserscreen = function CreateUserscreen() {\n  var _useState = useState({\n      name: \"\",\n      contact: \"\",\n      cid: \"\",\n      did: \"\",\n      email: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    userData = _useState2[0],\n    setUserData = _useState2[1];\n  var _useState3 = useState(\"Select a Department\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedDepartment = _useState4[0],\n    setSelectedDepartment = _useState4[1];\n  var _useState5 = useState(\"Select a Role\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedRole = _useState6[0],\n    setSelectedRole = _useState6[1];\n  var _useState7 = useState(\"Select an Employment\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedEmployment = _useState8[0],\n    setSelectedEmployment = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    showUserProfile = _useState10[0],\n    setShowUserProfile = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    inputValue = _useState12[0],\n    setInputValue = _useState12[1];\n  var departments = [\"IT\", \"NS\", \"Call Center\"];\n  var roles = [\"Staff\", \"Admin\", \"HR\"];\n  var employment = [\"Volunteers\", \"Contract\", \"Deputation\"];\n  var inputRef = useRef(null);\n  var USER_DATA_BASE_URL = \"http://192.168.128.8:8000/user-details\";\n  var createButtonPressed = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (inputValue.trim() !== \"\") {\n        try {\n          var response = yield fetch(`${USER_DATA_BASE_URL}/${inputValue}`);\n          if (response.status === 200) {\n            var data = yield response.json();\n            console.log(\"API Response:\", data);\n            if (Array.isArray(data) && data.length > 0) {\n              var _userData = data[0];\n              if (_userData.name && _userData.did && _userData.cid && _userData.email && _userData.mobile_no) {\n                setUserData(_userData);\n                setShowUserProfile(true);\n              } else {\n                console.error(\"Invalid or missing data in the API response.\");\n              }\n            } else {\n              console.error(\"No user data found in the API response.\");\n            }\n          } else if (response.status === 404) {\n            console.error(\"User not found. Check your CID and server.\");\n          } else {\n            console.error(\"Failed to fetch user data. Status Code:\", response.status);\n          }\n        } catch (error) {\n          console.error(\"Error fetching user data:\", error);\n        }\n      } else {\n        Alert.alert(\"CID Required\", \"Please enter a CID to fetch user data.\");\n      }\n    });\n    return function createButtonPressed() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var saveButtonPressed = function saveButtonPressed() {\n    if (showUserProfile) {\n      var formData = {\n        name: userData.name,\n        contact: userData.contact,\n        cid: userData.cid,\n        did: userData.did,\n        email: userData.email,\n        department: selectedDepartment,\n        role: selectedRole,\n        employment: selectedEmployment\n      };\n      fetch(USER_DATA_BASE_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      }).then(function (response) {\n        if (response.status === 200) {\n          console.log(\"Data saved successfully.\");\n        } else {\n          console.error(\"Failed to save data.\");\n        }\n      }).catch(function (error) {\n        console.error(\"Error while saving data:\", error);\n      });\n    }\n    setShowUserProfile(false);\n  };\n  return _jsxs(KeyboardAwareScrollView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : null,\n    style: {\n      flex: 1\n    },\n    children: [_jsx(View, {\n      style: styles.Container,\n      children: _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(View, {\n          style: styles.coolinput,\n          children: _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Enter your CiD Number........\",\n            name: \"input\",\n            keyboardType: \"numeric\",\n            value: inputValue,\n            onChangeText: function onChangeText(text) {\n              return setInputValue(text);\n            },\n            ref: inputRef\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.buttonContent,\n          onPress: createButtonPressed,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Search\"\n          })\n        })]\n      })\n    }), showUserProfile && _jsxs(View, {\n      style: styles.userProfile,\n      children: [_jsxs(View, {\n        style: styles.userInfoRow,\n        children: [_jsx(Ionicons, {\n          name: \"ios-person-circle\",\n          size: 24,\n          color: \"orange\",\n          style: styles.icon\n        }), _jsx(Text, {\n          style: styles.staticLabel,\n          children: \"Name:\"\n        }), _jsx(TextInput, {\n          style: styles.userInfoInput,\n          value: userData.name,\n          editable: false,\n          underlineColorAndroid: \"transparent\"\n        })]\n      }), _jsxs(View, {\n        style: styles.userInfoRow,\n        children: [_jsx(MaterialCommunityIcons, {\n          name: \"clipboard-account\",\n          size: 24,\n          color: \"orange\",\n          style: styles.icon\n        }), _jsx(Text, {\n          style: styles.staticLabel,\n          children: \"DID:\"\n        }), _jsx(TextInput, {\n          style: styles.userInfoInput,\n          value: userData.did,\n          editable: false,\n          underlineColorAndroid: \"transparent\"\n        })]\n      }), _jsxs(View, {\n        style: styles.userInfoRow,\n        children: [_jsx(Entypo, {\n          name: \"v-card\",\n          size: 24,\n          color: \"orange\",\n          style: styles.icon\n        }), _jsx(Text, {\n          style: styles.staticLabel,\n          children: \"CID:\"\n        }), _jsx(TextInput, {\n          style: styles.userInfoInput,\n          value: userData.cid,\n          editable: false,\n          underlineColorAndroid: \"transparent\"\n        })]\n      }), _jsxs(View, {\n        style: styles.userInfoRow,\n        children: [_jsx(Zocial, {\n          name: \"email\",\n          size: 24,\n          color: \"orange\",\n          style: styles.icon\n        }), _jsx(Text, {\n          style: styles.staticLabel,\n          children: \"Email:\"\n        }), _jsx(TextInput, {\n          style: styles.userInfoInput,\n          value: userData.email,\n          editable: false,\n          underlineColorAndroid: \"transparent\"\n        })]\n      }), _jsxs(View, {\n        style: styles.userInfoRow,\n        children: [_jsx(MaterialIcons, {\n          name: \"sim-card\",\n          size: 24,\n          color: \"orange\",\n          style: styles.icon\n        }), _jsx(Text, {\n          style: styles.staticLabel,\n          children: \"Contact:\"\n        }), _jsx(TextInput, {\n          style: styles.userInfoInput,\n          value: userData.contact,\n          editable: false,\n          underlineColorAndroid: \"transparent\"\n        })]\n      }), _jsxs(View, {\n        style: styles.userInfoRow,\n        children: [_jsx(Ionicons, {\n          name: \"ios-locate\",\n          size: 24,\n          color: \"orange\",\n          style: styles.icon\n        }), _jsx(Text, {\n          style: styles.staticLabel,\n          children: \"Designation:\"\n        }), _jsx(TextInput, {\n          style: styles.userInfoInput,\n          placeholder: \"Enter Designation...\",\n          editable: true,\n          underlineColorAndroid: \"transparent\"\n        })]\n      }), _jsxs(View, {\n        style: styles.userInfoRow,\n        children: [_jsx(FontAwesome, {\n          name: \"group\",\n          size: 24,\n          color: \"orange\",\n          style: styles.icon\n        }), _jsx(Text, {\n          style: styles.staticLabel,\n          children: \"Department:\"\n        }), _jsx(Picker, {\n          style: styles.userInfoInput,\n          selectedValue: selectedDepartment,\n          onValueChange: function onValueChange(itemValue) {\n            return setSelectedDepartment(itemValue);\n          },\n          children: [\"Select a Department\"].concat(departments).map(function (department, index) {\n            return _jsx(Picker.Item, {\n              label: department,\n              value: department\n            }, index);\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.userInfoRow,\n        children: [_jsx(FontAwesome5, {\n          name: \"network-wired\",\n          size: 24,\n          color: \"orange\",\n          style: styles.icon\n        }), _jsx(Text, {\n          style: styles.staticLabel,\n          children: \"Role:\"\n        }), _jsx(Picker, {\n          style: styles.userInfoInput,\n          selectedValue: selectedRole,\n          onValueChange: function onValueChange(itemValue) {\n            return setSelectedRole(itemValue);\n          },\n          children: [\"Select a Rolo\"].concat(roles).map(function (role, index) {\n            return _jsx(Picker.Item, {\n              label: role,\n              value: role\n            }, index);\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.userInfoRow,\n        children: [_jsx(FontAwesome, {\n          name: \"group\",\n          size: 24,\n          color: \"orange\",\n          style: styles.icon\n        }), _jsx(Text, {\n          style: styles.staticLabel,\n          children: \"Employment Type:\"\n        }), _jsx(Picker, {\n          style: styles.userInfoInput,\n          selectedValue: selectedEmployment,\n          onValueChange: function onValueChange(itemValue) {\n            return setSelectedEmployment(itemValue);\n          },\n          children: [\"Select a Employment\"].concat(employment).map(function (employmentType, index) {\n            return _jsx(Picker.Item, {\n              label: employmentType,\n              value: employmentType\n            }, index);\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.saveButton,\n        onPress: saveButtonPressed,\n        children: _jsx(Text, {\n          style: styles.saveButtonText,\n          children: \"Create\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  Container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: 20\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  coolinput: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: 300,\n    maxWidth: 240,\n    marginLeft: 20,\n    marginRight: 20\n  },\n  labelText: {\n    fontSize: 18,\n    color: \"#fc5f00\",\n    fontWeight: \"700\",\n    marginTop: 5,\n    marginLeft: 7,\n    paddingHorizontal: 3,\n    width: \"auto\"\n  },\n  input: {\n    padding: 11,\n    fontSize: 12,\n    borderWidth: 2,\n    borderColor: \"#ffb347\",\n    borderRadius: 5,\n    backgroundColor: \"#e8e8e8\"\n  },\n  buttonContent: {\n    backgroundColor: \"#fa9c1b\",\n    borderRadius: 6,\n    padding: 10,\n    transition: \"all 0.2s\"\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontWeight: \"600\",\n    fontSize: 20\n  },\n  userInfoRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10,\n    width: \"100%\",\n    marginLeft: 60\n  },\n  userInfoInput: {\n    flex: 1,\n    height: 40,\n    borderRadius: 10,\n    borderWidth: 0,\n    borderColor: \"transparent\",\n    color: \"grey\",\n    paddingLeft: 6\n  },\n  staticLabel: {\n    fontWeight: \"bold\",\n    paddingLeft: 16\n  },\n  userProfile: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  saveButton: {\n    backgroundColor: \"orange\",\n    padding: 10,\n    alignItems: \"center\",\n    borderRadius: 100,\n    marginTop: 20,\n    width: \"50%\",\n    marginBottom: 40\n  },\n  saveButtonText: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"700\"\n  }\n});\nexport default CreateUserscreen;","map":{"version":3,"names":["React","useState","useRef","View","Text","TextInput","StyleSheet","TouchableOpacity","Platform","Alert","Picker","Ionicons","MaterialCommunityIcons","Zocial","Entypo","FontAwesome","FontAwesome5","MaterialIcons","KeyboardAwareScrollView","jsx","_jsx","jsxs","_jsxs","CreateUserscreen","_useState","name","contact","cid","did","email","_useState2","_slicedToArray","userData","setUserData","_useState3","_useState4","selectedDepartment","setSelectedDepartment","_useState5","_useState6","selectedRole","setSelectedRole","_useState7","_useState8","selectedEmployment","setSelectedEmployment","_useState9","_useState10","showUserProfile","setShowUserProfile","_useState11","_useState12","inputValue","setInputValue","departments","roles","employment","inputRef","USER_DATA_BASE_URL","createButtonPressed","_ref","_asyncToGenerator","trim","response","fetch","status","data","json","console","log","Array","isArray","length","mobile_no","error","alert","apply","arguments","saveButtonPressed","formData","department","role","method","headers","body","JSON","stringify","then","catch","behavior","OS","style","flex","children","styles","Container","inputContainer","coolinput","input","placeholder","keyboardType","value","onChangeText","text","ref","buttonContent","onPress","buttonText","userProfile","userInfoRow","size","color","icon","staticLabel","userInfoInput","editable","underlineColorAndroid","selectedValue","onValueChange","itemValue","concat","map","index","Item","label","employmentType","saveButton","saveButtonText","create","display","flexDirection","marginTop","alignItems","marginBottom","width","maxWidth","marginLeft","marginRight","labelText","fontSize","fontWeight","paddingHorizontal","padding","borderWidth","borderColor","borderRadius","backgroundColor","transition","height","paddingLeft","justifyContent"],"sources":["C:/Users/Dell/Desktop/ScannerApp/screens/CreateUserScreen.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from \"react\";\r\n// import {\r\n//   View,\r\n//   Text,\r\n//   TextInput,\r\n//   StyleSheet,\r\n//   TouchableOpacity,\r\n//   KeyboardAvoidingView,\r\n//   Platform,\r\n// } from \"react-native\";\r\n// import { Picker } from \"@react-native-picker/picker\";\r\n// import {\r\n//   Ionicons,\r\n//   MaterialCommunityIcons,\r\n//   Zocial,\r\n//   Entypo,\r\n//   FontAwesome,\r\n//   FontAwesome5,\r\n//   MaterialIcons,\r\n// } from \"@expo/vector-icons\";\r\n// import { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\n\r\n// // Define the URL for user data\r\n// const USER_DATA_BASE_URL = \"http://192.168.128.8:8000/profile\";\r\n\r\n// const CreateUserscreen = () => {\r\n//   const [userData, setUserData] = useState({\r\n//     name: \"\",\r\n//     contact: \"\",\r\n//     cid: \"\",\r\n//     did: \"\",\r\n//     email: \"\",\r\n//   });\r\n\r\n//   const [selectedDepartment, setSelectedDepartment] = useState(\r\n//     \"Select a Department\"\r\n//   ); // Set to the default label\r\n//   const [selectedRole, setSelectedRole] = useState(\"Select a Role\"); // Set to the default label\r\n//   const [selectedEmployment, setSelectedEmployment] = useState(\r\n//     \"Select a Employment\"\r\n//   ); // Set to the default label\r\n\r\n//   const [showUserProfile, setShowUserProfile] = useState(false);\r\n//   const [formSubmitted, setFormSubmitted] = useState(false);\r\n//   const [inputValue, setInputValue] = useState(\"\");\r\n\r\n//   const departments = [\"IT\", \"NS\", \"Call Center\"];\r\n//   const roles = [\"Staff\", \"Admin\", \"HR\"];\r\n//   const employment = [\"Volunteers\", \"Contract\", \"Deputation\"];\r\n\r\n//   const inputRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch user data here from USER_DATA_BASE_URL\r\n//     fetchUserData();\r\n//   }, []);\r\n//   const fetchUserData = async () => {\r\n//     try {\r\n//       if (inputValue.trim() !== \"\") {\r\n//         // Perform an HTTP request to fetch user data from the backend\r\n//         const response = await fetch(`http://192.168.0.119:8000/user-details/${inputValue}`);\r\n//         if (response.status === 200) {\r\n//           const data = await response.json();\r\n//           setUserData(data); // Update userData state with the fetched data\r\n//         } else {\r\n//           console.error(\"Failed to fetch user data. Check your CID and server.\");\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching user data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const createButtonPressed = () => {\r\n//   if (inputValue.trim() !== \"\") {\r\n//     setShowUserProfile(true);\r\n//     inputRef.current.blur();\r\n//     setInputValue(\"\");\r\n    \r\n//     // Clear the selected values in the Picker components\r\n//     setSelectedDepartment(\"Select a Department\");\r\n//     setSelectedRole(\"Select a Role\");\r\n//     setSelectedEmployment(\"Select a Employment\");\r\n//   }\r\n// };\r\n//   const saveButtonPressed = () => {\r\n//     setShowUserProfile(false);\r\n//     setFormSubmitted(true);\r\n//     // Perform save action and submit the form data\r\n//   };\r\n\r\n  \r\n\r\n//   return (\r\n//     <KeyboardAwareScrollView\r\n//       behavior={Platform.OS === \"ios\" ? \"padding\" : null}\r\n//       style={{ flex: 1 }}\r\n//     >\r\n//       <View style={styles.Container}>\r\n//       <View style={styles.inputContainer}>\r\n//         <View style={styles.coolinput}>\r\n//           <Text style={styles.labelText}>CiD Card Number:</Text>\r\n//           <TextInput\r\n//             style={styles.input}\r\n//             placeholder=\"Enter your CiD Number........\"\r\n//             name=\"input\"\r\n//             keyboardType=\"numeric\"\r\n//             value={inputValue}\r\n//             onChangeText={(text) => setInputValue(text)}\r\n//             ref={inputRef}\r\n//           />\r\n//         </View>\r\n//         <TouchableOpacity\r\n//            style={[styles.buttonContent, styles.sameHeightButton]}\r\n//           onPress={createButtonPressed}\r\n//         >\r\n//           <Text style={styles.buttonText}>Create</Text>\r\n//         </TouchableOpacity>\r\n//       </View>\r\n//       </View>\r\n      // {showUserProfile && (\r\n      //   <View style={styles.userProfile}>\r\n      //     <View style={styles.userInfoRow}>\r\n      //       <Ionicons\r\n      //         name=\"ios-person-circle\"\r\n      //         size={24}\r\n      //         color=\"orange\"\r\n      //         style={styles.icon}\r\n      //       />\r\n      //       <Text style={styles.staticLabel}>Name:</Text>\r\n      //       <TextInput\r\n      //         style={styles.userInfoInput}\r\n      //         value={userData.name}\r\n      //         editable={false}\r\n      //         underlineColorAndroid=\"transparent\"\r\n      //       />\r\n      //     </View>\r\n      //     <View style={styles.userInfoRow}>\r\n      //       <MaterialCommunityIcons\r\n      //         name=\"clipboard-account\"\r\n      //         size={24}\r\n      //         color=\"orange\"\r\n      //         style={styles.icon}\r\n      //       />\r\n      //       <Text style={styles.staticLabel}>DID:</Text>\r\n      //       <TextInput\r\n      //         style={styles.userInfoInput}\r\n      //         value={userData.did}\r\n      //         editable={false}\r\n      //         underlineColorAndroid=\"transparent\"\r\n      //       />\r\n      //     </View>\r\n      //     <View style={styles.userInfoRow}>\r\n      //       <Entypo\r\n      //         name=\"v-card\"\r\n      //         size={24}\r\n      //         color=\"orange\"\r\n      //         style={styles.icon}\r\n      //       />\r\n      //       <Text style={styles.staticLabel}>CID:</Text>\r\n      //       <TextInput\r\n      //         style={styles.userInfoInput}\r\n      //         value={userData.cid ? userData.cid.toString() : \"\"}\r\n      //         editable={false}\r\n      //         underlineColorAndroid=\"transparent\"\r\n      //       />\r\n      //     </View>\r\n      //     <View style={styles.userInfoRow}>\r\n      //       <Zocial name=\"email\" size={24} color=\"orange\" style={styles.icon} />\r\n      //       <Text style={styles.staticLabel}>Email:</Text>\r\n      //       <TextInput\r\n      //         style={styles.userInfoInput}\r\n      //         value={userData.email}\r\n      //         editable={false}\r\n      //         underlineColorAndroid=\"transparent\"\r\n      //       />\r\n      //     </View>\r\n      //     <View style={styles.userInfoRow}>\r\n      //       <MaterialIcons\r\n      //         name=\"sim-card\"\r\n      //         size={24}\r\n      //         color=\"orange\"\r\n      //         style={styles.icon}\r\n      //       />\r\n      //       <Text style={styles.staticLabel}>Contact:</Text>\r\n      //       <TextInput\r\n      //         style={styles.userInfoInput}\r\n      //         value={userData.contact ? userData.contact.toString() : \"\"}\r\n      //         editable={false}\r\n      //         underlineColorAndroid=\"transparent\"\r\n      //       />\r\n      //     </View>\r\n      //     <View style={styles.userInfoRow}>\r\n      //       <Ionicons\r\n      //         name=\"ios-locate\"\r\n      //         size={24}\r\n      //         color=\"orange\"\r\n      //         style={styles.icon}\r\n      //       />\r\n      //       <Text style={styles.staticLabel}>Designation:</Text>\r\n      //       <TextInput\r\n      //         style={styles.userInfoInput}\r\n      //         placeholder=\"Enter Designation...\"\r\n      //         editable={true}\r\n      //         underlineColorAndroid=\"transparent\"\r\n              \r\n      //       />\r\n      //     </View>\r\n      //     <View style={styles.userInfoRow}>\r\n      //       <FontAwesome\r\n      //         name=\"group\"\r\n      //         size={24}\r\n      //         color=\"orange\"\r\n      //         style={styles.icon}\r\n      //       />\r\n      //       <Text style={styles.staticLabel}>Department:</Text>\r\n      //       <Picker\r\n      //         style={styles.userInfoInput}\r\n      //         selectedValue={selectedDepartment}\r\n      //         onValueChange={(itemValue) => setSelectedDepartment(itemValue)}\r\n      //       >\r\n      //         {[\"Select a Department\", ...departments].map(\r\n      //           (department, index) => (\r\n      //             <Picker.Item\r\n      //               label={department}\r\n      //               value={department}\r\n      //               key={index}\r\n      //             />\r\n      //           )\r\n      //         )}\r\n      //       </Picker>\r\n      //     </View>\r\n      //     <View style={styles.userInfoRow}>\r\n      //       <FontAwesome5\r\n      //         name=\"network-wired\"\r\n      //         size={24}\r\n      //         color=\"orange\"\r\n      //         style={styles.icon}\r\n      //       />\r\n      //       <Text style={styles.staticLabel}>Role:</Text>\r\n      //       <Picker\r\n      //         style={styles.userInfoInput}\r\n      //         // style={pickerStyle}\r\n      //         selectedValue={selectedRole}\r\n      //         onValueChange={(itemValue) => setSelectedRole(itemValue)}\r\n      //       >\r\n      //         {[\"Select a Rolo\", ...roles].map((role, index) => (\r\n      //           <Picker.Item label={role} value={role} key={index} />\r\n      //         ))}\r\n      //       </Picker>\r\n      //     </View>\r\n      //     <View style={styles.userInfoRow}>\r\n      //       <FontAwesome\r\n      //         name=\"group\"\r\n      //         size={24}\r\n      //         color=\"orange\"\r\n      //         style={styles.icon}\r\n      //       />\r\n      //       <Text style={styles.staticLabel}>Employment Type:</Text>\r\n      //       <Picker\r\n      //         style={styles.userInfoInput}\r\n      //         // style={pickerStyle}\r\n      //         selectedValue={selectedEmployment}\r\n      //         onValueChange={(itemValue) => setSelectedEmployment(itemValue)}\r\n      //       >\r\n      //         {[\"Select a Employment\", ...employment].map(\r\n      //           (employmentType, index) => (\r\n      //             <Picker.Item\r\n      //               label={employmentType}\r\n      //               value={employmentType}\r\n      //               key={index}\r\n      //             />\r\n      //           )\r\n      //         )}\r\n      //       </Picker>\r\n      //     </View>\r\n      //     <TouchableOpacity\r\n      //       style={styles.saveButton}\r\n      //       onPress={saveButtonPressed}\r\n      //     >\r\n      //       <Text style={styles.saveButtonText}>Save</Text>\r\n      //     </TouchableOpacity>\r\n      //   </View>\r\n//       )}\r\n//     </KeyboardAwareScrollView>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   Container: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"row\",\r\n//     marginTop: 20,\r\n//   },\r\n//   inputContainer: {\r\n//     flexDirection: \"row\",\r\n//     alignItems: \"center\",\r\n//     marginBottom: 20,\r\n//   },\r\n//   sameHeightButton: {\r\n//     height: 60, \r\n//     marginTop:30\r\n//   },\r\n//   coolinput: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//     width: 300,\r\n//     maxWidth: 240,\r\n//     marginLeft: 20,\r\n//     marginRight: 20,\r\n//   },\r\n//   labelText: {\r\n//     fontSize: 18,\r\n//     color: \"#fc5f00\",\r\n//     fontWeight: \"700\",\r\n//     marginTop: 5,\r\n//     marginLeft: 7,\r\n//     paddingHorizontal: 3,\r\n//     width: \"auto\",\r\n//   },\r\n//   input: {\r\n//     padding: 11,\r\n//     fontSize: 12,\r\n//     borderWidth: 2,\r\n//     borderColor: \"#ffb347\",\r\n//     borderRadius: 5,\r\n//     backgroundColor: \"#e8e8e8\",\r\n//   },\r\n//   buttonContent: {\r\n//     backgroundColor: \"#fa9c1b\",\r\n//     borderRadius: 6,\r\n//     padding: 10,\r\n//     transition: \"all 0.2s\",\r\n  \r\n//   },\r\n//   buttonText: {\r\n//     color: \"#fff\",\r\n//     fontWeight: \"600\",\r\n//     fontSize: 20,\r\n//   },\r\n//   userInfoRow: {\r\n//     flexDirection: \"row\",\r\n//     alignItems: \"center\",\r\n//     marginBottom: 10,\r\n//     width: \"100%\",\r\n//     marginLeft: 60,\r\n//   },\r\n//   userInfoInput: {\r\n//     flex: 1,\r\n//     height: 40,\r\n//     borderRadius: 10,\r\n//     borderWidth: 0,\r\n//     borderColor: \"transparent\",\r\n//     color: \"grey\",\r\n//     paddingLeft: 6,\r\n//   },\r\n//   staticLabel: {\r\n//     fontWeight: \"bold\",\r\n//     paddingLeft: 16,\r\n//   },\r\n\r\n//   userProfile: {\r\n//     flex: 1,\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//     marginTop: 20,\r\n//   },\r\n//   saveButton: {\r\n//     backgroundColor: \"orange\",\r\n//     padding: 10,\r\n//     alignItems: \"center\",\r\n//     borderRadius: 100,\r\n//     marginTop: 20,\r\n//     width: \"50%\",\r\n//     marginBottom:40\r\n//   },\r\n//   saveButtonText: {\r\n//     color: \"#fff\",\r\n//     fontSize: 18,\r\n//     fontWeight: \"700\",\r\n//   },\r\n// });\r\n\r\n// export default CreateUserscreen;\r\n\r\n\r\nimport React, { useState, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Platform,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\n\r\nimport {\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  Zocial,\r\n  Entypo,\r\n  FontAwesome,\r\n  FontAwesome5,\r\n  MaterialIcons,\r\n} from \"@expo/vector-icons\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\n\r\nconst CreateUserscreen = () => {\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n    contact: \"\",\r\n    cid: \"\",\r\n    did: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [selectedDepartment, setSelectedDepartment] = useState(\"Select a Department\");\r\n  const [selectedRole, setSelectedRole] = useState(\"Select a Role\");\r\n  const [selectedEmployment, setSelectedEmployment] = useState(\"Select an Employment\");\r\n\r\n  const [showUserProfile, setShowUserProfile] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const departments = [\"IT\", \"NS\", \"Call Center\"];\r\n  const roles = [\"Staff\", \"Admin\", \"HR\"];\r\n  const employment = [\"Volunteers\", \"Contract\", \"Deputation\"];\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const USER_DATA_BASE_URL = \"http://192.168.128.8:8000/user-details\";\r\n\r\n  // const USER_DATA_BASE_URL = \"http://202.144.153.106:8000/user-details\";\r\n\r\n  const createButtonPressed = async () => {\r\n    if (inputValue.trim() !== \"\") {\r\n      try {\r\n        const response = await fetch(`${USER_DATA_BASE_URL}/${inputValue}`);\r\n  \r\n        if (response.status === 200) {\r\n          const data = await response.json();\r\n          console.log(\"API Response:\", data);\r\n  \r\n          if (Array.isArray(data) && data.length > 0) {\r\n            const userData = data[0]; // Access the first item in the array\r\n            \r\n            if (userData.name && userData.did && userData.cid && userData.email && userData.mobile_no) {\r\n              // Update the state with the retrieved user data\r\n              setUserData(userData);\r\n  \r\n              // Show the user profile section\r\n              setShowUserProfile(true);\r\n            } else {\r\n              console.error(\"Invalid or missing data in the API response.\");\r\n            }\r\n          } else {\r\n            console.error(\"No user data found in the API response.\");\r\n          }\r\n        } else if (response.status === 404) {\r\n          console.error(\"User not found. Check your CID and server.\");\r\n        } else {\r\n          console.error(\"Failed to fetch user data. Status Code:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    } else {\r\n      Alert.alert(\"CID Required\", \"Please enter a CID to fetch user data.\");\r\n    }\r\n  };\r\n  \r\n  \r\n  const saveButtonPressed = () => {\r\n    // Here, you can send the form data to the backend for saving\r\n    if (showUserProfile) {\r\n      // Construct the data you want to send to the backend\r\n      const formData = {\r\n        name: userData.name,\r\n        contact: userData.contact,\r\n        cid: userData.cid,\r\n        did: userData.did,\r\n        email: userData.email,\r\n        // Add other form fields here\r\n        department: selectedDepartment,\r\n        role: selectedRole,\r\n        employment: selectedEmployment,\r\n      };\r\n\r\n      // Send a POST request to the backend to save the data\r\n      fetch(USER_DATA_BASE_URL, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      })\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            console.log(\"Data saved successfully.\");\r\n          } else {\r\n            console.error(\"Failed to save data.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error while saving data:\", error);\r\n        });\r\n    }\r\n    setShowUserProfile(false);\r\n  };\r\n\r\n  return (\r\n    <KeyboardAwareScrollView\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : null}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <View style={styles.Container}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={styles.coolinput}>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter your CiD Number........\"\r\n              name=\"input\"\r\n              keyboardType=\"numeric\"\r\n              value={inputValue}\r\n              onChangeText={(text) => setInputValue(text)}\r\n              ref={inputRef}\r\n            />\r\n          </View>\r\n          <TouchableOpacity\r\n            style={styles.buttonContent}\r\n            onPress={createButtonPressed}\r\n          >\r\n            <Text style={styles.buttonText}>Search</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      {showUserProfile && (\r\n        <View style={styles.userProfile}>\r\n          <View style={styles.userInfoRow}>\r\n            <Ionicons\r\n              name=\"ios-person-circle\"\r\n              size={24}\r\n              color=\"orange\"\r\n              style={styles.icon}\r\n            />\r\n            <Text style={styles.staticLabel}>Name:</Text>\r\n            <TextInput\r\n              style={styles.userInfoInput}\r\n              value={userData.name}\r\n              editable={false}\r\n              underlineColorAndroid=\"transparent\"\r\n            />\r\n          </View>\r\n          <View style={styles.userInfoRow}>\r\n            <MaterialCommunityIcons\r\n              name=\"clipboard-account\"\r\n              size={24}\r\n              color=\"orange\"\r\n              style={styles.icon}\r\n            />\r\n            <Text style={styles.staticLabel}>DID:</Text>\r\n            <TextInput\r\n              style={styles.userInfoInput}\r\n              value={userData.did}\r\n              editable={false}\r\n              underlineColorAndroid=\"transparent\"\r\n            />\r\n          </View>\r\n          <View style={styles.userInfoRow}>\r\n            <Entypo\r\n              name=\"v-card\"\r\n              size={24}\r\n              color=\"orange\"\r\n              style={styles.icon}\r\n            />\r\n            <Text style={styles.staticLabel}>CID:</Text>\r\n            <TextInput\r\n              style={styles.userInfoInput}\r\n              value={userData.cid}\r\n              editable={false}\r\n              underlineColorAndroid=\"transparent\"\r\n            />\r\n          </View>\r\n          <View style={styles.userInfoRow}>\r\n            <Zocial name=\"email\" size={24} color=\"orange\" style={styles.icon} />\r\n            <Text style={styles.staticLabel}>Email:</Text>\r\n            <TextInput\r\n              style={styles.userInfoInput}\r\n              value={userData.email}\r\n              editable={false}\r\n              underlineColorAndroid=\"transparent\"\r\n            />\r\n          </View>\r\n          <View style={styles.userInfoRow}>\r\n            <MaterialIcons\r\n              name=\"sim-card\"\r\n              size={24}\r\n              color=\"orange\"\r\n              style={styles.icon}\r\n            />\r\n            <Text style={styles.staticLabel}>Contact:</Text>\r\n            <TextInput\r\n              style={styles.userInfoInput}\r\n              value={userData.contact}\r\n              editable={false}\r\n              underlineColorAndroid=\"transparent\"\r\n            />\r\n          </View>\r\n          <View style={styles.userInfoRow}>\r\n            <Ionicons\r\n              name=\"ios-locate\"\r\n              size={24}\r\n              color=\"orange\"\r\n              style={styles.icon}\r\n            />\r\n            <Text style={styles.staticLabel}>Designation:</Text>\r\n            <TextInput\r\n              style={styles.userInfoInput}\r\n              placeholder=\"Enter Designation...\"\r\n              editable={true}\r\n              underlineColorAndroid=\"transparent\"\r\n              \r\n            />\r\n          </View>\r\n          <View style={styles.userInfoRow}>\r\n            <FontAwesome\r\n              name=\"group\"\r\n              size={24}\r\n              color=\"orange\"\r\n              style={styles.icon}\r\n            />\r\n            <Text style={styles.staticLabel}>Department:</Text>\r\n            <Picker\r\n              style={styles.userInfoInput}\r\n              selectedValue={selectedDepartment}\r\n              onValueChange={(itemValue) => setSelectedDepartment(itemValue)}\r\n            >\r\n              {[\"Select a Department\", ...departments].map(\r\n                (department, index) => (\r\n                  <Picker.Item\r\n                    label={department}\r\n                    value={department}\r\n                    key={index}\r\n                  />\r\n                )\r\n              )}\r\n            </Picker>\r\n          </View>\r\n          <View style={styles.userInfoRow}>\r\n            <FontAwesome5\r\n              name=\"network-wired\"\r\n              size={24}\r\n              color=\"orange\"\r\n              style={styles.icon}\r\n            />\r\n            <Text style={styles.staticLabel}>Role:</Text>\r\n            <Picker\r\n              style={styles.userInfoInput}\r\n              // style={pickerStyle}\r\n              selectedValue={selectedRole}\r\n              onValueChange={(itemValue) => setSelectedRole(itemValue)}\r\n            >\r\n              {[\"Select a Rolo\", ...roles].map((role, index) => (\r\n                <Picker.Item label={role} value={role} key={index} />\r\n              ))}\r\n            </Picker>\r\n          </View>\r\n          <View style={styles.userInfoRow}>\r\n            <FontAwesome\r\n              name=\"group\"\r\n              size={24}\r\n              color=\"orange\"\r\n              style={styles.icon}\r\n            />\r\n            <Text style={styles.staticLabel}>Employment Type:</Text>\r\n            <Picker\r\n              style={styles.userInfoInput}\r\n              // style={pickerStyle}\r\n              selectedValue={selectedEmployment}\r\n              onValueChange={(itemValue) => setSelectedEmployment(itemValue)}\r\n            >\r\n              {[\"Select a Employment\", ...employment].map(\r\n                (employmentType, index) => (\r\n                  <Picker.Item\r\n                    label={employmentType}\r\n                    value={employmentType}\r\n                    key={index}\r\n                  />\r\n                )\r\n              )}\r\n            </Picker>\r\n          </View>\r\n          <TouchableOpacity\r\n            style={styles.saveButton}\r\n            onPress={saveButtonPressed}\r\n          >\r\n            <Text style={styles.saveButtonText}>Create</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </KeyboardAwareScrollView>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  Container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    marginTop: 20,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  coolinput: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: 300,\r\n    maxWidth: 240,\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n  },\r\n  labelText: {\r\n    fontSize: 18,\r\n    color: \"#fc5f00\",\r\n    fontWeight: \"700\",\r\n    marginTop: 5,\r\n    marginLeft: 7,\r\n    paddingHorizontal: 3,\r\n    width: \"auto\",\r\n  },\r\n  input: {\r\n    padding: 11,\r\n    fontSize: 12,\r\n    borderWidth: 2,\r\n    borderColor: \"#ffb347\",\r\n    borderRadius: 5,\r\n    backgroundColor: \"#e8e8e8\",\r\n  },\r\n  buttonContent: {\r\n    backgroundColor: \"#fa9c1b\",\r\n    borderRadius: 6,\r\n    padding: 10,\r\n    transition: \"all 0.2s\",\r\n  \r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"600\",\r\n    fontSize: 20,\r\n  },\r\n  userInfoRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n    width: \"100%\",\r\n    marginLeft: 60,\r\n  },\r\n  userInfoInput: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderRadius: 10,\r\n    borderWidth: 0,\r\n    borderColor: \"transparent\",\r\n    color: \"grey\",\r\n    paddingLeft: 6,\r\n  },\r\n  staticLabel: {\r\n    fontWeight: \"bold\",\r\n    paddingLeft: 16,\r\n  },\r\n\r\n  userProfile: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: \"orange\",\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n    borderRadius: 100,\r\n    marginTop: 20,\r\n    width: \"50%\",\r\n    marginBottom:40\r\n  },\r\n  saveButtonText: {\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n    fontWeight: \"700\",\r\n  },\r\n});\r\n\r\nexport default CreateUserscreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BASE_URL = \"http://192.168.128.8:8000:8000\";\nvar QRCodeGenerator = function QRCodeGenerator() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    checkInQR = _useState2[0],\n    setCheckInQR = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    checkOutQR = _useState4[0],\n    setCheckOutQR = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showCheckInButton = _useState8[0],\n    setShowCheckInButton = _useState8[1];\n  var _useState9 = useState(\"Scan Me\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    labelText = _useState10[0],\n    setLabelText = _useState10[1];\n  var generateQR = function () {\n    var _ref = _asyncToGenerator(function* (action) {\n      try {\n        var response = yield fetch(`${BASE_URL}/api/qr-codes/${action}`);\n        if (response.ok) {\n          var data = yield response.json();\n          if (action === \"check-in\") {\n            setCheckInQR(data.check_in_qr_url);\n            setCheckOutQR(null);\n            setShowCheckInButton(false);\n            setLabelText(\"Check-In Code\");\n          } else if (action === \"check-out\") {\n            setCheckOutQR(data.check_out_qr_url);\n            setCheckInQR(null);\n            setShowCheckInButton(true);\n            setLabelText(\"Check-Out Code\");\n          }\n          setError(null);\n        } else {\n          setError(`Error fetching ${action} QR code`);\n        }\n      } catch (error) {\n        setError(`Error fetching ${action} QR code: ${error.message}`);\n      }\n    });\n    return function generateQR(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [showCheckInButton && _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return generateQR(\"check-in\");\n      },\n      style: [styles.button, styles.topRightButton],\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Generate Check-In QR Code\"\n      })\n    }), !showCheckInButton && _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return generateQR(\"check-out\");\n      },\n      style: [styles.button, styles.topRightButton],\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Generate Check-Out QR Code\"\n      })\n    }), (checkInQR || checkOutQR) && _jsxs(View, {\n      style: styles.qrContainer,\n      children: [_jsx(Image, {\n        source: {\n          uri: checkInQR || checkOutQR\n        },\n        style: styles.qrCode\n      }), _jsx(View, {\n        style: styles.labelContainer,\n        children: _jsx(Text, {\n          style: styles.labelText,\n          children: labelText\n        })\n      })]\n    }), error && _jsx(Text, {\n      style: styles.errorText,\n      children: error\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button: {\n    backgroundColor: \"#007AFF\",\n    padding: 10,\n    borderRadius: 5,\n    position: \"absolute\",\n    top: 20,\n    right: 20\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 16\n  },\n  topRightButton: {\n    backgroundColor: \"#007AFF\",\n    padding: 10,\n    borderRadius: 5,\n    position: \"absolute\",\n    top: 20,\n    right: 20\n  },\n  qrContainer: {\n    alignItems: \"center\",\n    marginTop: 20,\n    backgroundColor: \"orange\",\n    padding: 20,\n    borderRadius: 10\n  },\n  qrCode: {\n    width: 200,\n    height: 200\n  },\n  labelContainer: {\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 10,\n    marginTop: 10\n  },\n  labelText: {\n    color: \"blue\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  errorText: {\n    color: \"red\",\n    fontSize: 16,\n    marginTop: 10\n  }\n});\nexport default QRCodeGenerator;","map":{"version":3,"names":["React","useState","View","Text","Image","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","BASE_URL","QRCodeGenerator","_useState","_useState2","_slicedToArray","checkInQR","setCheckInQR","_useState3","_useState4","checkOutQR","setCheckOutQR","_useState5","_useState6","error","setError","_useState7","_useState8","showCheckInButton","setShowCheckInButton","_useState9","_useState10","labelText","setLabelText","generateQR","_ref","_asyncToGenerator","action","response","fetch","ok","data","json","check_in_qr_url","check_out_qr_url","message","_x","apply","arguments","style","styles","container","children","onPress","button","topRightButton","buttonText","qrContainer","source","uri","qrCode","labelContainer","errorText","create","flex","justifyContent","alignItems","backgroundColor","padding","borderRadius","position","top","right","color","fontSize","marginTop","width","height","fontWeight"],"sources":["C:/Users/Dell/Desktop/ScannerApp/screens/QRCodeGeneratorScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from \"react-native\";\r\n\r\nconst BASE_URL = \"http://192.168.128.8:8000:8000\";\r\n\r\n// const BASE_URL = \"http://192.168.0.119:8000\";\r\n\r\n// const BASE_URL = \"http://202.144.153.106:8000\";\r\n\r\n\r\nconst QRCodeGenerator = () => {\r\n  const [checkInQR, setCheckInQR] = useState(null);\r\n  const [checkOutQR, setCheckOutQR] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [showCheckInButton, setShowCheckInButton] = useState(true);\r\n  const [labelText, setLabelText] = useState(\"Scan Me\");\r\n\r\n  const generateQR = async (action) => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/api/qr-codes/${action}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (action === \"check-in\") {\r\n          setCheckInQR(data.check_in_qr_url);\r\n          setCheckOutQR(null);\r\n          setShowCheckInButton(false);\r\n          setLabelText(\"Check-In Code\"); // Change label text to \"Check-In\"\r\n        } else if (action === \"check-out\") {\r\n          setCheckOutQR(data.check_out_qr_url);\r\n          setCheckInQR(null);\r\n          setShowCheckInButton(true);\r\n          setLabelText(\"Check-Out Code\"); // Change label text to \"Check-Out\"\r\n        }\r\n        setError(null);\r\n      } else {\r\n        setError(`Error fetching ${action} QR code`);\r\n      }\r\n    } catch (error) {\r\n      setError(`Error fetching ${action} QR code: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {showCheckInButton && (\r\n        <TouchableOpacity\r\n          onPress={() => generateQR(\"check-in\")}\r\n          style={[styles.button, styles.topRightButton]}\r\n        >\r\n          <Text style={styles.buttonText}>Generate Check-In QR Code</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n\r\n      {!showCheckInButton && (\r\n        <TouchableOpacity\r\n          onPress={() => generateQR(\"check-out\")}\r\n          style={[styles.button, styles.topRightButton]}\r\n        >\r\n          <Text style={styles.buttonText}>Generate Check-Out QR Code</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n\r\n      {(checkInQR || checkOutQR) && (\r\n        <View style={styles.qrContainer}>\r\n          <Image source={{ uri: checkInQR || checkOutQR }} style={styles.qrCode} />\r\n          <View style={styles.labelContainer}>\r\n            <Text style={styles.labelText}>{labelText}</Text>\r\n          </View>\r\n        </View>\r\n      )}\r\n\r\n      {error && (\r\n        <Text style={styles.errorText}>{error}</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#007AFF\",\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    right: 20,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n  },\r\n  topRightButton: {\r\n    backgroundColor: \"#007AFF\",\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    right: 20,\r\n  },\r\n  qrContainer: {\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n    backgroundColor: \"orange\",\r\n    padding: 20,\r\n    borderRadius: 10,\r\n  },\r\n  qrCode: {\r\n    width: 200,\r\n    height: 200,\r\n  },\r\n  labelContainer: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginTop: 10,\r\n  },\r\n  labelText: {\r\n    color: \"blue\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    fontSize: 16,\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport default QRCodeGenerator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}